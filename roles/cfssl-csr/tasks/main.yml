---

# TODO this is overly complicated for this usage

- name: Create local cert directory
  local_action: 
    module: file
    path: '{{ kubernetes_local_certs_dir }}'
    state: directory

- name: Copy CSR to CA
  template: 
    src: '{{ item }}'
    dest: '{{ cfssl_ca_request_dir}}/{{ item | basename }}'
  with_items: 
    - '{{ cfssl_csr.csr_path }}' 
  delegate_to: "{{ groups['certificate-authorities'][0] }}"

- name: Generate CA certificate and private key
  shell: > 
    cfssl gencert 
    -ca={{ cfssl_ca_certs_dir }}/ca.pem 
    -ca-key={{ cfssl_ca_certs_dir }}/ca-key.pem 
    -config={{ cfssl_ca_conf_dir }}/ca-config.json 
    -hostname={{ cfssl_csr.hostnames | default(cfssl_csr.name) | join(',') }}
    -profile=kubernetes 
    {{ cfssl_ca_request_dir }}/{{ cfssl_csr.csr_path | basename }} | cfssljson -bare {{ cfssl_csr.name }}
  args:
    chdir: '{{ cfssl_ca_certs_dir }}'
    creates: '{{ cfssl_ca_certs_dir }}/{{ cfssl_csr.name }}-key.pem'
  delegate_to: "{{ groups['certificate-authorities'][0] }}"

- name: Fetch certs
  fetch:
    src: '{{ cfssl_ca_certs_dir }}/{{ item }}'
    dest: '{{ kubernetes_local_certs_dir }}/{{ item }}'
    fail_on_missing: true
    flat: true
  with_items: 
    - '{{ cfssl_csr.name }}-key.pem'
    - '{{ cfssl_csr.name }}.pem'
    - 'ca.pem'
    - 'ca-key.pem'
  delegate_to: "{{ groups['certificate-authorities'][0] }}"
