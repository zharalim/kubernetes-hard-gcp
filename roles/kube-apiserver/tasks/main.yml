---

- name: Master component configuration
  import_role: 
    name: 'kube-master-component'
  vars: 
    kube_master_component_name: kube-apiserver
    kube_master_component_csr_path: '{{ playbook_dir }}/roles/kube-apiserver/files/kubernetes-csr.json'
    kube_master_component_csr_hostnames: "{{ kube_apiserver_csr_hostnames_base 
            + kube_apiserver_host_ip_list 
            + [kubernetes_api_static_ip_address] }}"
    kube_master_component_server_ip: '{{ kubernetes_api_static_ip_address }}'
    kube_master_component_data_dir: '{{ kube_apiserver_data_dir }}'
    kube_master_component_bin_dir: '{{ kube_apiserver_bin_dir }}'

- name: Configure encryption key
  block: 
    - name: Check if encryption key exists
      local_action:
        module: stat
        path: '{{ kube_apiserver_encryption_config_local }}'
      run_once: true
      register: encryption_key_file_stat

    - name: Generate encryption key
      block: 
        - name: Generate encryption key
          local_action: 'shell head -c 32 /dev/urandom | base64'
          register: generated_encryption_key
        
        - set_fact: kube_apiserver_encryption_key='{{ generated_encryption_key.stdout }}'

        - name: Save encryption key locally
          local_action:
            module: template
            src: encryption_config.yml.j2
            dest: '{{ kube_apiserver_encryption_config_local }}'

      run_once: true
      when: encryption_key_file_stat.stat.exists == false

    - name: Copy encryption config to host
      template: 
        src: '{{ kube_apiserver_encryption_config_local }}'
        dest: '{{ kube_apiserver_data_dir }}/encryption_config.yml'
      become: true

  tags: configure

- name: Start service
  service:
    name: kube-apiserver
    state: started
    enabled: true
  become: true