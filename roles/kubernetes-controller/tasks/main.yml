---

- name: Get API ip address 
  local_action: command gcloud compute addresses describe {{ kubernetes_api_static_ip_address_name }} --region {{ gce_region }} --format 'value(address)'
  changed_when: false
  register: kubernetes_api_static_ip_address
  run_once: true

- name: Certificate request for Kubernetes API Server certificate
  import_role: 
    name: cfssl-csr
  vars: 
    cfssl_csr: 
      name: kubernetes
      hostnames: "{{ kubernetes_controller_csr_hostnames_base 
        + kubernetes_controller_private_ip_list 
        + [kubernetes_api_static_ip_address.stdout] }}"
      # The included role seems to evaluate role_path to itself.
      csr_path: '{{ playbook_dir }}/roles/kubernetes-controller/files/kubernetes-csr.json'
  run_once: true

- name: Copy certificates to host
  copy: 
    src: '{{ kubernetes_local_certs_dir }}/{{ item }}'
    # TODO proper dir
    dest: '/tmp/{{ item }}'
  with_items:
    - 'kubernetes.pem'
    - 'kubernetes-key.pem'
    - 'ca.pem'
    - 'ca-key.pem'


- name: Check if encryption key exists
  stat: 
    path: '{{ kubernetes_controller_encryption_config_local }}'
  register: encryption_key_file_stat

- name: Generate encryption key
  block: 
    - name: Generate encryption key
      local_action: 'shell head -c 32 /dev/urandom | base64'
      register: generated_encryption_key
    
    - set_fact: kubernetes_controller_encryption_key='{{ generated_encryption_key.stdout }}'

    - name: Save encryption key locally
      local_action:
        module: template
        src: encryption_config.yml.j2
        dest: '{{ kubernetes_controller_encryption_config_local }}'

  run_once: true
  when: encryption_key_file_stat.stat.exists == false

- name: Copy encryption config to host
  template: 
    src: '{{ kubernetes_controller_encryption_config_local }}'
    # TODO path
    dest: '/tmp/encryption_config.yml'
